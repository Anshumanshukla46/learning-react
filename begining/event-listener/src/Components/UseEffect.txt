FETCHING API
step 1. GET the data (fetch)
step 2. Save the data to state

Use effect is a used to handle side-effect.

What are react's primary task?
- work with dom/browser to render UI to page
- managed state for us between render cycles (i.e., state values are "remembered" from one render to next)
- keep the UI updated whenever state changes occur


What can't React handle on its own?
- (out)side effects
-- local storage
-- API/database interactions (any api request)
-- subscriptions (like web sockets)
-- syncing 2 different internal states together
-- basically anything that react isn't charge of.

SIDE-EFFECT => USEEFFECT

import React, {useState, useEffect} from "react"
useEffect(?,?);

React.useEffect(function() {
        fetch("https://swapi.dev/api/people/1")
            .then(res => res.json())

        count += 1
        // THIS FUNCTION GUARANTEES THAT it will run after ui is loaded as of after return (statement)
    }, although-optional-but included-mostly [count])
    use empty array [] to show that it is run once.


-> second parameter is dependency array means each time it compared the new and old value
here is of count then it will check old-count(say 0) and new-count(say 1)

CLEANING UP IN "USEEFFECT"
Many a times we might do some changes but 
if their is something we want to delete something then we can do this using useEffect.

    React.useEffect(() => {
        function watchWidth() {
            console.log("Setting up...")
            setWindowWidth(window.innerWidth)
        }
        
        window.addEventListener("resize", watchWidth)
        
        return function() {
            console.log("Cleaning up...")
            window.removeEventListener("resize", watchWidth)
        }
    }, [])

    


QUIZ

1. What is a "side effect" in React? What are some examples?
- Any code that affected by an outside system.
- example -> local storage, API, websockets, two states to keep in sync


2. What is NOT a "side effect" in React? Examples?
- Anything that React is in charge of.
- example -> Maintaining state, keeping the UI in sync with the data, 
  render DOM elements


3. When does React run your useEffect function? When does it NOT run
   the effect function?
- It run useEffect as soon as the component loads (first render)
- and also on every re-render of the component (assuming no dependencies array) it run useEffect again
= Will NOT run the effect when the values of the dependencies-array in the
  array stay the same between renders


4. How would you explain what the "dependecies array" is?
- Second paramter to the useEffect function
- A way for React to know whether it should re-run the effect function or not


